<?php

namespace MediGeek;

use MediGeek\IPSQRCodeParser;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-07-12 at 19:45:29.
 */
class IPSQRCodeParserTest extends TestCase
{

    /**
     * @var IPSQRCodeParser
     */
    protected $parser;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->parser = new IPSQRCodeParser("K:PR|V:01|C:1|R:160000000000060216|N:Telekom Srbija A.D.
Takovska 2
Beograd|I:RSD999,99|P:SAVVAS RADEVIĆ
IMEULICE 01
11000 BEOGRAD 6|SF:189|S:MTS Račun 01/2020 12345566/2|RO:97082240113797893");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
        
    }

    /**
     * @covers MediGeek\IPSQRCodeParser::mapKeys
     * @todo   Implement testMapKeys().
     */
    public function testMapKeys()
    {
        $this->assertEquals(
            array(
                'AmountDecimals' => '99',
                'AmountInteger' => '999',
                'BankAccountNumber' => '160000000000060216',
                'CharacterSet' => '1',
                'Currency' => 'RSD',
                'CurrencyAndAmount' => 'RSD999,99',
                'IdentificationCode' => 'PR',
                'PayeeApprovalReferenceCode' => '97082240113797893',
                'PayeeNameAndPlace' => 'Telekom Srbija A.D.
Takovska 2
Beograd',
                'PayerNameAndPlace' => 'SAVVAS RADEVIĆ
IMEULICE 01
11000 BEOGRAD 6',
                'PaymentCode' => '189',
                'PaymentPurpose' => 'MTS Račun 01/2020 12345566/2',
                'Version' => '01'
            ),
            $this->parser->mapKeys()
        );
    }

    /**
     * @covers MediGeek\IPSQRCodeParser::validate
     * @todo   Implement testValidate().
     */
    public function testValidate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MediGeek\IPSQRCodeParser::setQRCodeObjectVar
     * @todo   Implement testSetQRCodeObjectVar().
     */
    public function testSetQRCodeObjectVar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MediGeek\IPSQRCodeParser::get
     * @todo   Implement testGet().
     */
    public function testGet()
    {
        $this->assertEquals(
                array(
                    'AmountDecimals' => '99',
                    'AmountInteger' => '999',
                    'BankAccountNumber' => '160000000000060216',
                    'CharacterSet' => '1',
                    'Currency' => 'RSD',
                    'CurrencyAndAmount' => 'RSD999,99',
                    'IdentificationCode' => 'PR',
                    'PayeeApprovalReferenceCode' => '97082240113797893',
                    'PayeeNameAndPlace' => 'Telekom Srbija A.D.
Takovska 2
Beograd',
                    'PayerNameAndPlace' => 'SAVVAS RADEVIĆ
IMEULICE 01
11000 BEOGRAD 6',
                    'PaymentCode' => '189',
                    'PaymentPurpose' => 'MTS Račun 01/2020 12345566/2',
                    'Version' => '01'
                ),
                $this->parser->get()
        );
    }

    /**
     * @covers MediGeek\IPSQRCodeParser::parse
     * @todo   Implement testParse().
     */
    public function testParse()
    {
        $this->testParseSplit();
        $this->testMapKeys();
        $this->testParseCurrencyAndAmount();
                
    }

    /**
     * @covers MediGeek\IPSQRCodeParser::parseSplit
     * @todo   Implement testParseSplit().
     */
    public function testParseSplit()
    {
        $this->assertEquals(
            
            array(
                "K" => "PR",
                "V" => "01",
                "C" => "1",
                "R" => "160000000000060216",
                "N" =>"Telekom Srbija A.D.
Takovska 2
Beograd",
                "I" => "RSD999,99",
                "SF" => "189",
                "S" => "MTS Račun 01/2020 12345566/2",
                "RO" => "97082240113797893",
                "P" => "SAVVAS RADEVIĆ
IMEULICE 01
11000 BEOGRAD 6"
            ),
            $this->parser->parseSplit()
        );
    }

    /**
     * @covers MediGeek\IPSQRCodeParser::parseCurrencyAndAmount
     * @todo   Implement testParseCurrencyAndAmount().
     */
    public function testParseCurrencyAndAmount()
    {
        $this->assertEquals(
            
            array(
                'Currency' => 'RSD',
                'AmountInteger' => '999',
                'AmountDecimals' => '99'
            ),
            $this->parser->parseCurrencyAndAmount()
        );
    }
}
